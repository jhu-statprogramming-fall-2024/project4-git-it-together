---
title: "BLS Data Cleaning"
format: html
editor: visual
---

Members: Amanda Kim (akim148\@jh.edu), Da Yea Song (dsong13\@jhmi.edu)

## Set Up

```{r}
# Load packages
suppressPackageStartupMessages(library(blsAPI))
suppressPackageStartupMessages(library(blscrapeR))
suppressPackageStartupMessages(library(devtools))
suppressPackageStartupMessages(library(dplyr))
suppressPackageStartupMessages(library(tidyr))

install_github("mikeasilva/blsAPI", force = TRUE)
```

## Part 1

1.1 Retrieve median weekly earnings by gender

::: callout-note
The data has been split into 3 separate data sets (initially) due to the limitation on the BLS website to pull 10 years of data at a time. The 3 data sets have been recombined at the end.
:::

```{r}
# 2000-2009 Median weekly earning by sex 
service_occupation_1 <- c(
  "LEU0254650200",  # Median weekly earning (Men)
  "LEU0254757000"  # Median weekly earning (Women)
)

start_year <- 2000
end_year <- 2009
service_occupation_1 <- bls_api(service_occupation_1, startyear = start_year, endyear = end_year)
```

```{r}
# 2010-2019 Median weekly earning by sex
service_occupation_2 <- c(
  "LEU0254650200",  # Median weekly earning (Men)
  "LEU0254757000"  # Median weekly earning (Women)
)

start_year <- 2010
end_year <- 2019
service_occupation_2 <- bls_api(service_occupation_2, startyear = start_year, endyear = end_year)
```

```{r}
# 2020-2023 Median weekly earning by sex
service_occupation_3 <- c(
  "LEU0254650200",  # Median weekly earning (Men)
  "LEU0254757000"  # Median weekly earning (Women)
)

start_year <- 2020
end_year <- 2023
service_occupation_3 <- bls_api(service_occupation_3, startyear = start_year, endyear = end_year)
```

1.2 Convert data to wide format

```{r}
service_occupation_1 <- service_occupation_1 %>%
  select(year, period, seriesID, value) %>%  
  pivot_wider(names_from = seriesID, values_from = value) %>%  
  arrange(year, period) 
```

```{r}
service_occupation_2 <- service_occupation_2 %>%
  select(year, period, seriesID, value) %>%  
  pivot_wider(names_from = seriesID, values_from = value) %>%  
  arrange(year, period) 
```

```{r}
service_occupation_3 <- service_occupation_3 %>%
  select(year, period, seriesID, value) %>%  
  pivot_wider(names_from = seriesID, values_from = value) %>%  
  arrange(year, period) 
```

1.3 Rename variables for readability

```{r}
service_occupation_1 <- service_occupation_1 %>%
  rename(
    men = LEU0254650200,
    women = LEU0254757000
  )
```

```{r}
service_occupation_2 <- service_occupation_2 %>%
  rename(
    men = LEU0254650200,
    women = LEU0254757000
  )
```

```{r}
service_occupation_3 <- service_occupation_3 %>%
  rename(
    men = LEU0254650200,
    women = LEU0254757000
  )
```

1.5 Combine the three data sets

```{r}
service_occupation <- bind_rows(service_occupation_1, 
                                service_occupation_2,
                                service_occupation_3)

View(service_occupation)
```

1.6 Aggregate quarterly data to annual

```{r}
service_occupation_a1 <- service_occupation_1 %>%
  group_by(year) %>%
  summarise(
    a_men = sum(men, na.rm = TRUE) / 4,
    a_women = sum(women, na.rm = TRUE) / 4
  ) %>%
  ungroup()
```

```{r}
service_occupation_a2 <- service_occupation_2 %>%
  group_by(year) %>%
  summarise(
    a_men = sum(men, na.rm = TRUE) / 4,
    a_women = sum(women, na.rm = TRUE) / 4
  ) %>%
  ungroup()
```

```{r}
service_occupation_a3 <- service_occupation_3 %>%
  group_by(year) %>%
  summarise(
    a_men = sum(men, na.rm = TRUE) / 4,
    a_women = sum(women, na.rm = TRUE) / 4
  ) %>%
  ungroup()
```

```{r}
service_occupation_a <- bind_rows(service_occupation_a1, 
                                service_occupation_a2,
                                service_occupation_a3)

View(service_occupation_a)
```

1.7 Adding Race Variable

::: callout-note
The data has been split into 2 separate data sets (initially) due to the limitation on the BLS website to pull 10 years of data at a time. The 3 data sets have been recombined at the end.
:::

```{r}
service_occupation_1r <- c(
  "LEU0259199200",  # Median weekly earning (Asian Men)
  "LEU0259210800",  # Median weekly earning (Asian Women)
  "LEU0259193400",  # Median weekly earning (White Men)
  "LEU0259205000",  # Median weekly earning (White Women)
  "LEU0259196300",  # Median weekly earning (Black Men)
  "LEU0259207900"   # Median weekly earning (Black Women)
)

start_year <- 2010
end_year <- 2019
service_occupation_1r <- bls_api(service_occupation_1r, startyear = start_year, endyear = end_year)
```

```{r}
service_occupation_2r <- c(
  "LEU0259199200",  # Median weekly earning (Asian Men)
  "LEU0259210800",  # Median weekly earning (Asian Women)
  "LEU0259193400",  # Median weekly earning (White Men)
  "LEU0259205000",  # Median weekly earning (White Women)
  "LEU0259196300",  # Median weekly earning (Black Men)
  "LEU0259207900"   # Median weekly earning (Black Women)
)

start_year <- 2020
end_year <- 2023
service_occupation_2r <- bls_api(service_occupation_2r, startyear = start_year, endyear = end_year)
```

```{r}
service_occupation_1r <- service_occupation_1r %>%
  select(year, period, seriesID, value) %>%  
  pivot_wider(names_from = seriesID, values_from = value) %>%  
  arrange(year, period) 
```

```{r}
service_occupation_2r <- service_occupation_2r %>%
  select(year, period, seriesID, value) %>%  
  pivot_wider(names_from = seriesID, values_from = value) %>%  
  arrange(year, period) 
```

```{r}
service_occupation_1r <- service_occupation_1r %>%
  rename(
    asian_men = LEU0259199200,
    asian_women = LEU0259210800,
    white_men = LEU0259193400,
    white_women = LEU0259205000,
    black_men = LEU0259196300,
    black_women = LEU0259207900
  )
```

```{r}
service_occupation_2r <- service_occupation_2r %>%
  rename(
    asian_men = LEU0259199200,
    asian_women = LEU0259210800,
    white_men = LEU0259193400,
    white_women = LEU0259205000,
    black_men = LEU0259196300,
    black_women = LEU0259207900
  )
```

```{r}
service_occupation_r <- bind_rows(service_occupation_1r, 
                                service_occupation_2r)

View(service_occupation_r)
```

## Part 2

2.1 Create function to call in data

```{r}
qcewGetIndustryData <- function (year, qtr, industry) {
	url <- "http://data.bls.gov/cew/data/api/YEAR/QTR/industry/INDUSTRY.csv"
	url <- sub("YEAR", year, url, ignore.case=FALSE)
	url <- sub("QTR", tolower(qtr), url, ignore.case=FALSE)
	url <- sub("INDUSTRY", industry, url, ignore.case=FALSE)
	read.csv(url, header = TRUE, sep = ",", quote="\"", dec=".", na.strings=" ", skip=0)
}
```

2.2 Call in industry: information

```{r}
information <- list()

years <- 2014:2023
quarters <- c("1", "2", "3", "4")
industry <- "1022"  

# Loop through years and quarters
for (year in years) {
  for (qtr in quarters) {
    # Fetch data for the given year and quarter
    data <- qcewGetIndustryData(year, qtr, industry)
    
   # Add the year_quarter column
    if (!is.null(data)) {
      year_quarter <- paste(year, "Q", qtr, sep = "_")  # e.g., "2000_Q1"
      data$year_quarter <- year_quarter  # Add as a new column
      information[[year_quarter]] <- data  # Store in the list
    }
  }
}

information <- do.call(rbind, information)
```

```{r}
information <- information %>%
  select(area_fips, own_code, oty_month3_emplvl_pct_chg, year_quarter)

head(information)
```

```{r}
area_fips_values <- c(
  01000, 02000, 04000, 05000, 06000, 08000, 09000, 10000, 12000, 13000, 
  15000, 16000, 17000, 18000, 19000, 20000, 21000, 22000, 23000, 24000, 
  25000, 26000, 27000, 28000, 29000, 30000, 31000, 32000, 33000, 34000, 
  35000, 36000, 37000, 38000, 39000, 40000, 41000, 42000, 44000, 45000, 
  46000, 47000, 48000, 49000, 50000, 51000, 53000, 54000, 55000, 56000, 
  72000, 78000
)

information <- information %>%
  filter(area_fips %in% area_fips_values, own_code == 5)

View(information)
```

```{r}
information <- information %>%
  filter(area_fips %in% c(
    01000, 02000, 04000, 05000, 06000, 08000, 09000, 10000, 12000, 13000, 
    15000, 16000, 17000, 18000, 19000, 20000, 21000, 22000, 23000, 24000, 
    25000, 26000, 27000, 28000, 29000, 30000, 31000, 32000, 33000, 34000, 
    35000, 36000, 37000, 38000, 39000, 40000, 41000, 42000, 44000, 45000, 
    46000, 47000, 48000, 49000, 50000, 51000, 53000, 54000, 55000, 56000, 
    72000, 78000
  )) %>%
  
  mutate(state = case_when(
    area_fips == 01000 ~ "Alabama",
    area_fips == 02000 ~ "Alaska",
    area_fips == 04000 ~ "Arizona",
    area_fips == 05000 ~ "Arkansas",
    area_fips == 06000 ~ "California",
    area_fips == 08000 ~ "Colorado",
    area_fips == 09000 ~ "Connecticut",
    area_fips == 10000 ~ "Delaware",
    area_fips == 12000 ~ "Florida",
    area_fips == 13000 ~ "Georgia",
    area_fips == 15000 ~ "Hawaii",
    area_fips == 16000 ~ "Idaho",
    area_fips == 17000 ~ "Illinois",
    area_fips == 18000 ~ "Indiana",
    area_fips == 19000 ~ "Iowa",
    area_fips == 20000 ~ "Kansas",
    area_fips == 21000 ~ "Kentucky",
    area_fips == 22000 ~ "Louisiana",
    area_fips == 23000 ~ "Maine",
    area_fips == 24000 ~ "Maryland",
    area_fips == 25000 ~ "Massachusetts",
    area_fips == 26000 ~ "Michigan",
    area_fips == 27000 ~ "Minnesota",
    area_fips == 28000 ~ "Mississippi",
    area_fips == 29000 ~ "Missouri",
    area_fips == 30000 ~ "Montana",
    area_fips == 31000 ~ "Nebraska",
    area_fips == 32000 ~ "Nevada",
    area_fips == 33000 ~ "New Hampshire",
    area_fips == 34000 ~ "New Jersey",
    area_fips == 35000 ~ "New Mexico",
    area_fips == 36000 ~ "New York",
    area_fips == 37000 ~ "North Carolina",
    area_fips == 38000 ~ "North Dakota",
    area_fips == 39000 ~ "Ohio",
    area_fips == 40000 ~ "Oklahoma",
    area_fips == 41000 ~ "Oregon",
    area_fips == 42000 ~ "Pennsylvania",
    area_fips == 44000 ~ "Rhode Island",
    area_fips == 45000 ~ "South Carolina",
    area_fips == 46000 ~ "South Dakota",
    area_fips == 47000 ~ "Tennessee",
    area_fips == 48000 ~ "Texas",
    area_fips == 49000 ~ "Utah",
    area_fips == 50000 ~ "Vermont",
    area_fips == 51000 ~ "Virginia",
    area_fips == 53000 ~ "Washington",
    area_fips == 54000 ~ "West Virginia",
    area_fips == 55000 ~ "Wisconsin",
    area_fips == 56000 ~ "Wyoming",
    area_fips == 72000 ~ "Puerto Rico",
    area_fips == 78000 ~ "Virgin Islands",
    TRUE ~ NA_character_ # Default for unmatched values
  ))

# View the updated dataset
View(information)
```

2.3 Call in industry: financial activities

```{r}
finance <- list()

years <- 2014:2023
quarters <- c("1", "2", "3", "4")
industry <- "1023"  

# Loop through years and quarters
for (year in years) {
  for (qtr in quarters) {
    # Fetch data for the given year and quarter
    data <- qcewGetIndustryData(year, qtr, industry)
    
   # Add the year_quarter column
    if (!is.null(data)) {
      year_quarter <- paste(year, "Q", qtr, sep = "_")  # e.g., "2000_Q1"
      data$year_quarter <- year_quarter  # Add as a new column
      finance[[year_quarter]] <- data  # Store in the list
    }
  }
}

finance <- do.call(rbind, finance)
```

```{r}
finance <- finance %>%
  select(area_fips, own_code, oty_month3_emplvl_pct_chg, year_quarter)
```

```{r}
area_fips_values <- c(
  01000, 02000, 04000, 05000, 06000, 08000, 09000, 10000, 12000, 13000, 
  15000, 16000, 17000, 18000, 19000, 20000, 21000, 22000, 23000, 24000, 
  25000, 26000, 27000, 28000, 29000, 30000, 31000, 32000, 33000, 34000, 
  35000, 36000, 37000, 38000, 39000, 40000, 41000, 42000, 44000, 45000, 
  46000, 47000, 48000, 49000, 50000, 51000, 53000, 54000, 55000, 56000, 
  72000, 78000
)

finance <- finance %>%
  filter(area_fips %in% area_fips_values, own_code == 5)
```

```{r}
finance <- finance %>%
  filter(area_fips %in% c(
    01000, 02000, 04000, 05000, 06000, 08000, 09000, 10000, 12000, 13000, 
    15000, 16000, 17000, 18000, 19000, 20000, 21000, 22000, 23000, 24000, 
    25000, 26000, 27000, 28000, 29000, 30000, 31000, 32000, 33000, 34000, 
    35000, 36000, 37000, 38000, 39000, 40000, 41000, 42000, 44000, 45000, 
    46000, 47000, 48000, 49000, 50000, 51000, 53000, 54000, 55000, 56000, 
    72000, 78000
  )) %>%
  
  mutate(state = case_when(
    area_fips == 01000 ~ "Alabama",
    area_fips == 02000 ~ "Alaska",
    area_fips == 04000 ~ "Arizona",
    area_fips == 05000 ~ "Arkansas",
    area_fips == 06000 ~ "California",
    area_fips == 08000 ~ "Colorado",
    area_fips == 09000 ~ "Connecticut",
    area_fips == 10000 ~ "Delaware",
    area_fips == 12000 ~ "Florida",
    area_fips == 13000 ~ "Georgia",
    area_fips == 15000 ~ "Hawaii",
    area_fips == 16000 ~ "Idaho",
    area_fips == 17000 ~ "Illinois",
    area_fips == 18000 ~ "Indiana",
    area_fips == 19000 ~ "Iowa",
    area_fips == 20000 ~ "Kansas",
    area_fips == 21000 ~ "Kentucky",
    area_fips == 22000 ~ "Louisiana",
    area_fips == 23000 ~ "Maine",
    area_fips == 24000 ~ "Maryland",
    area_fips == 25000 ~ "Massachusetts",
    area_fips == 26000 ~ "Michigan",
    area_fips == 27000 ~ "Minnesota",
    area_fips == 28000 ~ "Mississippi",
    area_fips == 29000 ~ "Missouri",
    area_fips == 30000 ~ "Montana",
    area_fips == 31000 ~ "Nebraska",
    area_fips == 32000 ~ "Nevada",
    area_fips == 33000 ~ "New Hampshire",
    area_fips == 34000 ~ "New Jersey",
    area_fips == 35000 ~ "New Mexico",
    area_fips == 36000 ~ "New York",
    area_fips == 37000 ~ "North Carolina",
    area_fips == 38000 ~ "North Dakota",
    area_fips == 39000 ~ "Ohio",
    area_fips == 40000 ~ "Oklahoma",
    area_fips == 41000 ~ "Oregon",
    area_fips == 42000 ~ "Pennsylvania",
    area_fips == 44000 ~ "Rhode Island",
    area_fips == 45000 ~ "South Carolina",
    area_fips == 46000 ~ "South Dakota",
    area_fips == 47000 ~ "Tennessee",
    area_fips == 48000 ~ "Texas",
    area_fips == 49000 ~ "Utah",
    area_fips == 50000 ~ "Vermont",
    area_fips == 51000 ~ "Virginia",
    area_fips == 53000 ~ "Washington",
    area_fips == 54000 ~ "West Virginia",
    area_fips == 55000 ~ "Wisconsin",
    area_fips == 56000 ~ "Wyoming",
    area_fips == 72000 ~ "Puerto Rico",
    area_fips == 78000 ~ "Virgin Islands",
    TRUE ~ NA_character_ # Default for unmatched values
  ))
```

2.4 Call in industry: Professional and business services

```{r}
professional <- list()

years <- 2014:2023
quarters <- c("1", "2", "3", "4")
industry <- "1024"  

# Loop through years and quarters
for (year in years) {
  for (qtr in quarters) {
    # Fetch data for the given year and quarter
    data <- qcewGetIndustryData(year, qtr, industry)
    
   # Add the year_quarter column
    if (!is.null(data)) {
      year_quarter <- paste(year, "Q", qtr, sep = "_")  # e.g., "2000_Q1"
      data$year_quarter <- year_quarter  # Add as a new column
      professional[[year_quarter]] <- data  # Store in the list
    }
  }
}

professional <- do.call(rbind, professional)
```

```{r}
professional <- professional %>%
  select(area_fips, own_code, oty_month3_emplvl_pct_chg, year_quarter)
```

```{r}
area_fips_values <- c(
  01000, 02000, 04000, 05000, 06000, 08000, 09000, 10000, 12000, 13000, 
  15000, 16000, 17000, 18000, 19000, 20000, 21000, 22000, 23000, 24000, 
  25000, 26000, 27000, 28000, 29000, 30000, 31000, 32000, 33000, 34000, 
  35000, 36000, 37000, 38000, 39000, 40000, 41000, 42000, 44000, 45000, 
  46000, 47000, 48000, 49000, 50000, 51000, 53000, 54000, 55000, 56000, 
  72000, 78000
)

professional <- professional %>%
  filter(area_fips %in% area_fips_values, own_code == 5)
```

```{r}
professional <- professional %>%
  filter(area_fips %in% c(
    01000, 02000, 04000, 05000, 06000, 08000, 09000, 10000, 12000, 13000, 
    15000, 16000, 17000, 18000, 19000, 20000, 21000, 22000, 23000, 24000, 
    25000, 26000, 27000, 28000, 29000, 30000, 31000, 32000, 33000, 34000, 
    35000, 36000, 37000, 38000, 39000, 40000, 41000, 42000, 44000, 45000, 
    46000, 47000, 48000, 49000, 50000, 51000, 53000, 54000, 55000, 56000, 
    72000, 78000
  )) %>%
  
  mutate(state = case_when(
    area_fips == 01000 ~ "Alabama",
    area_fips == 02000 ~ "Alaska",
    area_fips == 04000 ~ "Arizona",
    area_fips == 05000 ~ "Arkansas",
    area_fips == 06000 ~ "California",
    area_fips == 08000 ~ "Colorado",
    area_fips == 09000 ~ "Connecticut",
    area_fips == 10000 ~ "Delaware",
    area_fips == 12000 ~ "Florida",
    area_fips == 13000 ~ "Georgia",
    area_fips == 15000 ~ "Hawaii",
    area_fips == 16000 ~ "Idaho",
    area_fips == 17000 ~ "Illinois",
    area_fips == 18000 ~ "Indiana",
    area_fips == 19000 ~ "Iowa",
    area_fips == 20000 ~ "Kansas",
    area_fips == 21000 ~ "Kentucky",
    area_fips == 22000 ~ "Louisiana",
    area_fips == 23000 ~ "Maine",
    area_fips == 24000 ~ "Maryland",
    area_fips == 25000 ~ "Massachusetts",
    area_fips == 26000 ~ "Michigan",
    area_fips == 27000 ~ "Minnesota",
    area_fips == 28000 ~ "Mississippi",
    area_fips == 29000 ~ "Missouri",
    area_fips == 30000 ~ "Montana",
    area_fips == 31000 ~ "Nebraska",
    area_fips == 32000 ~ "Nevada",
    area_fips == 33000 ~ "New Hampshire",
    area_fips == 34000 ~ "New Jersey",
    area_fips == 35000 ~ "New Mexico",
    area_fips == 36000 ~ "New York",
    area_fips == 37000 ~ "North Carolina",
    area_fips == 38000 ~ "North Dakota",
    area_fips == 39000 ~ "Ohio",
    area_fips == 40000 ~ "Oklahoma",
    area_fips == 41000 ~ "Oregon",
    area_fips == 42000 ~ "Pennsylvania",
    area_fips == 44000 ~ "Rhode Island",
    area_fips == 45000 ~ "South Carolina",
    area_fips == 46000 ~ "South Dakota",
    area_fips == 47000 ~ "Tennessee",
    area_fips == 48000 ~ "Texas",
    area_fips == 49000 ~ "Utah",
    area_fips == 50000 ~ "Vermont",
    area_fips == 51000 ~ "Virginia",
    area_fips == 53000 ~ "Washington",
    area_fips == 54000 ~ "West Virginia",
    area_fips == 55000 ~ "Wisconsin",
    area_fips == 56000 ~ "Wyoming",
    area_fips == 72000 ~ "Puerto Rico",
    area_fips == 78000 ~ "Virgin Islands",
    TRUE ~ NA_character_ # Default for unmatched values
  ))
```

2.5 Call in industry: education and health

```{r}
education <- list()

years <- 2014:2023
quarters <- c("1", "2", "3", "4")
industry <- "1025"  

# Loop through years and quarters
for (year in years) {
  for (qtr in quarters) {
    # Fetch data for the given year and quarter
    data <- qcewGetIndustryData(year, qtr, industry)
    
   # Add the year_quarter column
    if (!is.null(data)) {
      year_quarter <- paste(year, "Q", qtr, sep = "_")  # e.g., "2000_Q1"
      data$year_quarter <- year_quarter  # Add as a new column
      education[[year_quarter]] <- data  # Store in the list
    }
  }
}

education <- do.call(rbind, education)
```

```{r}
education <- education %>%
  select(area_fips, own_code, oty_month3_emplvl_pct_chg, year_quarter)
```

```{r}
area_fips_values <- c(
  01000, 02000, 04000, 05000, 06000, 08000, 09000, 10000, 12000, 13000, 
  15000, 16000, 17000, 18000, 19000, 20000, 21000, 22000, 23000, 24000, 
  25000, 26000, 27000, 28000, 29000, 30000, 31000, 32000, 33000, 34000, 
  35000, 36000, 37000, 38000, 39000, 40000, 41000, 42000, 44000, 45000, 
  46000, 47000, 48000, 49000, 50000, 51000, 53000, 54000, 55000, 56000, 
  72000, 78000
)

education <- education %>%
  filter(area_fips %in% area_fips_values, own_code == 5)
```

```{r}
education <- education %>%
  filter(area_fips %in% c(
    01000, 02000, 04000, 05000, 06000, 08000, 09000, 10000, 12000, 13000, 
    15000, 16000, 17000, 18000, 19000, 20000, 21000, 22000, 23000, 24000, 
    25000, 26000, 27000, 28000, 29000, 30000, 31000, 32000, 33000, 34000, 
    35000, 36000, 37000, 38000, 39000, 40000, 41000, 42000, 44000, 45000, 
    46000, 47000, 48000, 49000, 50000, 51000, 53000, 54000, 55000, 56000, 
    72000, 78000
  )) %>%
  
  mutate(state = case_when(
    area_fips == 01000 ~ "Alabama",
    area_fips == 02000 ~ "Alaska",
    area_fips == 04000 ~ "Arizona",
    area_fips == 05000 ~ "Arkansas",
    area_fips == 06000 ~ "California",
    area_fips == 08000 ~ "Colorado",
    area_fips == 09000 ~ "Connecticut",
    area_fips == 10000 ~ "Delaware",
    area_fips == 12000 ~ "Florida",
    area_fips == 13000 ~ "Georgia",
    area_fips == 15000 ~ "Hawaii",
    area_fips == 16000 ~ "Idaho",
    area_fips == 17000 ~ "Illinois",
    area_fips == 18000 ~ "Indiana",
    area_fips == 19000 ~ "Iowa",
    area_fips == 20000 ~ "Kansas",
    area_fips == 21000 ~ "Kentucky",
    area_fips == 22000 ~ "Louisiana",
    area_fips == 23000 ~ "Maine",
    area_fips == 24000 ~ "Maryland",
    area_fips == 25000 ~ "Massachusetts",
    area_fips == 26000 ~ "Michigan",
    area_fips == 27000 ~ "Minnesota",
    area_fips == 28000 ~ "Mississippi",
    area_fips == 29000 ~ "Missouri",
    area_fips == 30000 ~ "Montana",
    area_fips == 31000 ~ "Nebraska",
    area_fips == 32000 ~ "Nevada",
    area_fips == 33000 ~ "New Hampshire",
    area_fips == 34000 ~ "New Jersey",
    area_fips == 35000 ~ "New Mexico",
    area_fips == 36000 ~ "New York",
    area_fips == 37000 ~ "North Carolina",
    area_fips == 38000 ~ "North Dakota",
    area_fips == 39000 ~ "Ohio",
    area_fips == 40000 ~ "Oklahoma",
    area_fips == 41000 ~ "Oregon",
    area_fips == 42000 ~ "Pennsylvania",
    area_fips == 44000 ~ "Rhode Island",
    area_fips == 45000 ~ "South Carolina",
    area_fips == 46000 ~ "South Dakota",
    area_fips == 47000 ~ "Tennessee",
    area_fips == 48000 ~ "Texas",
    area_fips == 49000 ~ "Utah",
    area_fips == 50000 ~ "Vermont",
    area_fips == 51000 ~ "Virginia",
    area_fips == 53000 ~ "Washington",
    area_fips == 54000 ~ "West Virginia",
    area_fips == 55000 ~ "Wisconsin",
    area_fips == 56000 ~ "Wyoming",
    area_fips == 72000 ~ "Puerto Rico",
    area_fips == 78000 ~ "Virgin Islands",
    TRUE ~ NA_character_ # Default for unmatched values
  ))
```

2.6 Call in industry: Leisure and hospitality

```{r}
leisure <- list()

years <- 2014:2023
quarters <- c("1", "2", "3", "4")
industry <- "1026"  

# Loop through years and quarters
for (year in years) {
  for (qtr in quarters) {
    # Fetch data for the given year and quarter
    data <- qcewGetIndustryData(year, qtr, industry)
    
   # Add the year_quarter column
    if (!is.null(data)) {
      year_quarter <- paste(year, "Q", qtr, sep = "_")  # e.g., "2000_Q1"
      data$year_quarter <- year_quarter  # Add as a new column
      leisure[[year_quarter]] <- data  # Store in the list
    }
  }
}

leisure <- do.call(rbind, leisure)
```

```{r}
leisure <- leisure %>%
  select(area_fips, own_code, oty_month3_emplvl_pct_chg, year_quarter)
```

```{r}
area_fips_values <- c(
  01000, 02000, 04000, 05000, 06000, 08000, 09000, 10000, 12000, 13000, 
  15000, 16000, 17000, 18000, 19000, 20000, 21000, 22000, 23000, 24000, 
  25000, 26000, 27000, 28000, 29000, 30000, 31000, 32000, 33000, 34000, 
  35000, 36000, 37000, 38000, 39000, 40000, 41000, 42000, 44000, 45000, 
  46000, 47000, 48000, 49000, 50000, 51000, 53000, 54000, 55000, 56000, 
  72000, 78000
)

leisure <- leisure %>%
  filter(area_fips %in% area_fips_values, own_code == 5)
```

```{r}
leisure <- leisure %>%
  filter(area_fips %in% c(
    01000, 02000, 04000, 05000, 06000, 08000, 09000, 10000, 12000, 13000, 
    15000, 16000, 17000, 18000, 19000, 20000, 21000, 22000, 23000, 24000, 
    25000, 26000, 27000, 28000, 29000, 30000, 31000, 32000, 33000, 34000, 
    35000, 36000, 37000, 38000, 39000, 40000, 41000, 42000, 44000, 45000, 
    46000, 47000, 48000, 49000, 50000, 51000, 53000, 54000, 55000, 56000, 
    72000, 78000
  )) %>%
  
  mutate(state = case_when(
    area_fips == 01000 ~ "Alabama",
    area_fips == 02000 ~ "Alaska",
    area_fips == 04000 ~ "Arizona",
    area_fips == 05000 ~ "Arkansas",
    area_fips == 06000 ~ "California",
    area_fips == 08000 ~ "Colorado",
    area_fips == 09000 ~ "Connecticut",
    area_fips == 10000 ~ "Delaware",
    area_fips == 12000 ~ "Florida",
    area_fips == 13000 ~ "Georgia",
    area_fips == 15000 ~ "Hawaii",
    area_fips == 16000 ~ "Idaho",
    area_fips == 17000 ~ "Illinois",
    area_fips == 18000 ~ "Indiana",
    area_fips == 19000 ~ "Iowa",
    area_fips == 20000 ~ "Kansas",
    area_fips == 21000 ~ "Kentucky",
    area_fips == 22000 ~ "Louisiana",
    area_fips == 23000 ~ "Maine",
    area_fips == 24000 ~ "Maryland",
    area_fips == 25000 ~ "Massachusetts",
    area_fips == 26000 ~ "Michigan",
    area_fips == 27000 ~ "Minnesota",
    area_fips == 28000 ~ "Mississippi",
    area_fips == 29000 ~ "Missouri",
    area_fips == 30000 ~ "Montana",
    area_fips == 31000 ~ "Nebraska",
    area_fips == 32000 ~ "Nevada",
    area_fips == 33000 ~ "New Hampshire",
    area_fips == 34000 ~ "New Jersey",
    area_fips == 35000 ~ "New Mexico",
    area_fips == 36000 ~ "New York",
    area_fips == 37000 ~ "North Carolina",
    area_fips == 38000 ~ "North Dakota",
    area_fips == 39000 ~ "Ohio",
    area_fips == 40000 ~ "Oklahoma",
    area_fips == 41000 ~ "Oregon",
    area_fips == 42000 ~ "Pennsylvania",
    area_fips == 44000 ~ "Rhode Island",
    area_fips == 45000 ~ "South Carolina",
    area_fips == 46000 ~ "South Dakota",
    area_fips == 47000 ~ "Tennessee",
    area_fips == 48000 ~ "Texas",
    area_fips == 49000 ~ "Utah",
    area_fips == 50000 ~ "Vermont",
    area_fips == 51000 ~ "Virginia",
    area_fips == 53000 ~ "Washington",
    area_fips == 54000 ~ "West Virginia",
    area_fips == 55000 ~ "Wisconsin",
    area_fips == 56000 ~ "Wyoming",
    area_fips == 72000 ~ "Puerto Rico",
    area_fips == 78000 ~ "Virgin Islands",
    TRUE ~ NA_character_ # Default for unmatched values
  ))
```
